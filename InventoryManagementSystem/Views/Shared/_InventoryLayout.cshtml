@using InventoryManagementSystem.EntitiesLayer.Models
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@inject SignInManager<User> signInManager
@inject UserManager<User> userManager

@{
    var currentUser = await userManager.GetUserAsync(User);
}
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">

	<!-- Boxicons -->
	<link href='https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css' rel='stylesheet'>
	<!-- My CSS -->
	<link rel="stylesheet" href="~/css/dashboardstyle.css">

	<title>Inventory Management System</title>
</head>
<body>

	<!-- SIDEBAR -->
	<section id="sidebar">
		<a href="#" class="brand">
			<i class='bx bxs-smile'></i>
			<span class="text">@currentUser?.FullName</span>
		</a>
		<ul class="side-menu top">
			<li class="active">
				<a asp-area="" asp-controller="Dashboard" asp-action="Index">
					<i class='bx bxs-dashboard'></i>
					<span class="text">Dashboard</span>
				</a>
			</li>
			<li>
				<a asp-area="" asp-controller="Category" asp-action="Index">
					<i class='bx bxs-shopping-bag-alt'></i>
					<span class="text">Category</span>
				</a>
			</li>
			<li>
				<a asp-area="" asp-controller="Supplier" asp-action="Index">
					<i class='bx bxs-group'></i>
					<span class="text">Suppliers</span>
				</a>
			</li>
			<li>
				<a asp-area="" asp-controller="Product" asp-action="Index">
					<i class='bx bxs-doughnut-chart'></i>
					<span class="text">Product</span>
				</a>
			</li>
			<li>
				<a asp-area="" asp-controller="Role" asp-action="Index">
					<i class='bx bxs-cog'></i>
					<span class="text">Roles</span>
				</a>
			</li>
			<li>
				<a asp-area="" asp-controller="RoleManagement" asp-action="Index">
					<i class='bx bxs-group'></i>
					<span class="text">Role Management</span>
				</a>
			</li>
			<li>
				<a asp-area="" asp-controller="Stock" asp-action="Index">
					<i class='bx bxs-cog'></i>
					<span class="text">Low Stock</span>
				</a>
			</li>
		</ul>
		<ul class="side-menu">
			<li>
				<a asp-area="" asp-controller="Account" asp-action="UserProfile" asp-route-id="@User.FindFirstValue(ClaimTypes.NameIdentifier)">
					<i class='bx bxs-user'></i>
					<span class="text">Profile</span>
				</a>
			</li>
			<li>

				<a href="#" class="logout-btn" onclick="event.preventDefault(); document.getElementById('logout-form').submit();">
					<i class="fas fa-sign-out-alt"></i> Logout
				</a>

				<form id="logout-form" asp-controller="Account" asp-action="Logout" method="post" style="display:none;">
					@Html.AntiForgeryToken()
				</form>

			</li>
		</ul>
	</section>
	<!-- SIDEBAR -->
	<!-- CONTENT -->
	<section id="content">
		<!-- NAVBAR -->
		<nav>
			<i class='bx bx-menu'></i>
			<form action="#">
				<div class="form-input">
					<input type="search" placeholder="Search...">
					<button type="submit" class="search-btn"><i class='bx bx-search'></i></button>
				</div>
			</form>
			
			<a href="#" class="profile">
				@if (!string.IsNullOrEmpty(currentUser?.ProfilePictureUrl))
				{
					<img src="~/images/@currentUser.ProfilePictureUrl" alt="Profile Picture">
				}
				else
				{
					<img src="~/images/default_profile.png" alt="Profile Picture">
				}
			</a>
		</nav>
		<!-- NAVBAR -->
		<!-- MAIN -->
		<main>
				@RenderBody()
			
		</main>
		<!-- MAIN -->
	</section>
	<!-- CONTENT -->

	
	<script src="~/lib/jquery/dist/jquery.min.js"></script>
	<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
	<script src="~/js/site.js" asp-append-version="true"></script>
	<script src="~/js/site.js" ></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.9/signalr.min.js"></script>
	<script>
		document.addEventListener('DOMContentLoaded', () => {
			const lowStockBtn = document.getElementById('lowStockBtn');

			// create connection with SignalR Hub
			const connection = new signalR.HubConnectionBuilder()
				.withUrl("/stockHub")
				.build();

			// receive low stock notification
			connection.on("ReceiveLowStockNotification", (productName, stock) => {
				showLowStockNotification(productName, stock);
			});

			// start connection
			connection.start().then(() => {
				console.log("Connected to SignalR Hub");
			}).catch(err => console.error(err.toString()));

			// display notification
			function showLowStockNotification(productName, stock) {
				if (Notification.permission === 'granted') {
					new Notification("Low Stock Alert!", {
						body: `${productName} has only ${stock} items left in stock!`,
						icon: "https://via.placeholder.com/100"
					});
				}
			}

			// confirm from notification permission
			Notification.requestPermission().then(permission => {
				if (permission === 'granted') {
					lowStockBtn.disabled = false;
				}
			});

			// check stock
			lowStockBtn.addEventListener('click', () => {
				fetch('/api/stock/update-stock', {
					method: 'POST',
					headers: { 'Content-Type': 'application/json' },
					body: JSON.stringify({ productName: 'Product A', stock: 5 })
				});
			});
		});
	</script>

	@await RenderSectionAsync("Scripts", required: false)
</body>
</html>


